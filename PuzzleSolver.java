package edu.iastate.cs472.proj1;

import java.io.FileNotFoundException;

/**
 *  
 * @author
 *
 */

public class PuzzleSolver 
{
	/**
	 *  Read an initial state from the input file.  Solve the eight puzzle three times:
	 *  
	 *      1) The first solution allows single moves only and uses the heuristic based on the number
	 *         of mismatched tiles. 
	 *         
	 *      2) The second solution also allows single moves only but uses the heuristic based on the 
	 *         Manhattan distance. 
	 *         
	 *      3) The third solution allows single and double moves and uses the admissible heuristic 
	 *         designed by yourself.  
	 *         
	 *  Each solution is printed out as a sequence of states, generated by single/double moves, from the 
	 *  initial state to the goal state. If no solution exists, report it.  
	 * 
	 * --------------- Implementation Details-----------------
	 * - Uses the provided fileNames array
	 * - Iterates through the fileNames array, creates a State object from each file and solve the puzzle 
	 * - Prints the solution or an error message if the file is not found or has an invalid format 
	 * 
	 * @param args
	 * @throws FileNotFoundException if the input file does not exist 
	 * @throws IllegalArgumentException if the initial state from the file is not in the correct format
	 */
	public static void main(String[] args) throws FileNotFoundException, IllegalArgumentException
	{	
		String fileNames[] = new String[] {"8Puzzle.txt"}; 
		
		for (String fileName : fileNames){
			try {
				State initialState = new State(fileName); 

				String solution = EightPuzzle.solve8Puzzle(initialState); 

				System.out.println("Solution for puzzle in file: " + fileName);
				System.out.println(solution);
			} catch (FileNotFoundException e){
				System.out.println("File not found: " + fileName);
			} catch (IllegalArgumentException e){
				System.out.println("Invalid puzzle format in file: " + fileName);
			}
		} 
	}
}

